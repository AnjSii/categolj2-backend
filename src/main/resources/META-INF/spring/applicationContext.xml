<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:metrics="http://www.ryantenney.com/schema/metrics"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.ryantenney.com/schema/metrics http://www.ryantenney.com/schema/metrics/metrics-3.0.xsd">

    <bean class="am.ik.categolj2.infra.logging.PidSetter"/>

    <import resource="classpath:/META-INF/spring/categolj2-domain.xml"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <context:property-placeholder
            location="classpath*:/META-INF/spring/*.properties"/>

    <bean class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <property name="mappingFiles"
                  value="classpath*:/META-INF/dozer/**/*-mapping.xml"/>
    </bean>

    <!-- Message -->
    <bean id="messageSource"
          class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>i18n/application-messages</value>
            </list>
        </property>
    </bean>

    <!-- Exception Code Resolver. -->
    <bean id="exceptionCodeResolver"
          class="org.terasoluna.gfw.common.exception.SimpleMappingExceptionCodeResolver">
        <!-- Setting and Customization by project. -->
        <property name="exceptionMappings">
            <map>
                <entry key="ResourceNotFoundException" value="e.xx.fw.5001"/>
                <entry key="BusinessException" value="e.xx.fw.8001"/>
            </map>
        </property>
        <property name="defaultExceptionCode" value="e.xx.fw.9001"/>
    </bean>

    <!-- Exception Logger. -->
    <bean id="exceptionLogger"
          class="org.terasoluna.gfw.common.exception.ExceptionLogger">
        <property name="exceptionCodeResolver" ref="exceptionCodeResolver"/>
    </bean>

    <!-- Filter. -->
    <bean id="exceptionLoggingFilter"
          class="org.terasoluna.gfw.web.exception.ExceptionLoggingFilter">
        <property name="exceptionLogger" ref="exceptionLogger"/>
    </bean>
    <bean id="pidMDCPutFilter" class="am.ik.categolj2.core.web.pid.PidMDCPutFilter" depends-on="pidSetter">
    </bean>
    <bean id="pidSetter" class="am.ik.categolj2.infra.logging.PidSetter"/>

    <!-- Jackson Object Mapper -->
    <bean id="objectMapper"
          class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
        <property name="objectMapper">
            <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                <property name="timeZone" value="${user.timezone:JST}"/>
            </bean>
        </property>
        <property name="simpleDateFormat" value="yyyy-MM-dd'T'HH:mm:ss.SSSZ"/>
    </bean>

    <!-- Enable handling of java.util.logging through SLF4J -->
    <bean id="slf4JBridgeHandler" class="org.slf4j.bridge.SLF4JBridgeHandler"
          init-method="removeHandlersForRootLogger"/>
    <bean class="org.slf4j.bridge.SLF4JBridgeHandler"
          init-method="install"
          depends-on="slf4JBridgeHandler"/>


    <bean class="org.springframework.web.client.RestTemplate"></bean>

    <!-- spring-boot-actuator -->
    <bean id="metricRepository" class="org.springframework.boot.actuate.metrics.repository.InMemoryMetricRepository"/>

    <bean id="metricReader" class="org.springframework.boot.actuate.metrics.reader.CompositeMetricReader">
        <constructor-arg>
            <array>
                <ref bean="metricRepository"/>
            </array>
        </constructor-arg>
    </bean>
    <bean id="metricWriter" class="org.springframework.boot.actuate.metrics.writer.CompositeMetricWriter">
        <constructor-arg>
            <array>
                <ref bean="metricRepository"/>
                <ref bean="codahaleMetricWriter"/>
            </array>
        </constructor-arg>
    </bean>

    <bean id="counterService" class="org.springframework.boot.actuate.metrics.writer.DefaultCounterService">
        <constructor-arg ref="metricWriter"/>
    </bean>
    <bean id="gaugeService" class="org.springframework.boot.actuate.metrics.writer.DefaultGaugeService">
        <constructor-arg ref="metricWriter"/>
    </bean>

    <bean id="metricFilter" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <bean class="org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration"/>
        </property>
        <property name="targetMethod" value="metricFilter"/>
    </bean>

    <!-- Codahole Metrics -->
    <metrics:metric-registry id="metricRegistry"/>
    <metrics:health-check-registry id="healthCheckRegistry"/>
    <metrics:annotation-driven metric-registry="metricRegistry" health-check-registry="healthCheckRegistry"
                               proxy-target-class="true"/>
    <metrics:register metric-registry="metricRegistry">
        <bean metrics:name="jvm.gc" class="com.codahale.metrics.jvm.GarbageCollectorMetricSet"/>
        <bean metrics:name="jvm.memory" class="com.codahale.metrics.jvm.MemoryUsageGaugeSet"/>
        <bean metrics:name="jvm.thread-states" class="com.codahale.metrics.jvm.ThreadStatesGaugeSet"/>
        <bean metrics:name="jvm.fd.usage" class="com.codahale.metrics.jvm.FileDescriptorRatioGauge"/>
    </metrics:register>

    <bean id="codahaleMetricWriter" class="org.springframework.boot.actuate.metrics.writer.CodahaleMetricWriter">
        <constructor-arg ref="metricRegistry"/>
    </bean>
</beans>
